{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "fullbok-demo - JMeter cluster demo CloudFormation template file.",
  "Parameters" : {
    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String",
      "MinLength" : "1",
      "MaxLength" : "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },
    "TargetCapacity" : {
      "Default" : "2",
      "Description" : "Number of EC2 instances to launch for the jmeter Target.",
      "Type" : "Number",
      "MinValue": "1"
    },
    "MasterInstanceAMI" : {
      "Description" : "AMI ID of Master instance (Microsoft Windows Server 2012 RTM 64-bit)",
      "Type" : "String",
      "MinLength": "12",
      "MaxLength": "12",
      "AllowedPattern" : "ami-[a-zA-Z0-9]*"
    },
    "SlaveCapacity" : {
      "Default" : "2",
      "Description" : "Number of EC2 instances to launch for the jmeter Slave.",
      "Type" : "Number",
      "MinValue": "2"
    },
    "SlaveSpotPrice" : {
      "Default" : "0",
      "Description" : "Spot price for the jmeter slave.",
      "Type" : "Number"
    }
  },
  "Mappings" : {
    "AWSAmazonLinuxAMI": {
      "us-east-1":      { "name":"Virginia",   "201303": "ami-3275ee5b", "201309": "ami-35792c5c" },
      "us-west-2":      { "name":"Oregon",     "201303": "ami-ecbe2adc", "201309": "ami-d03ea1e0" },
      "us-west-1":      { "name":"California", "201303": "ami-66d1fc23", "201309": "ami-687b4f2d" },
      "eu-west-1":      { "name":"Ireland",    "201303": "ami-44939930", "201309": "ami-149f7863" },
      "ap-southeast-1": { "name":"Singapole",  "201303": "ami-aa9ed2f8", "201309": "ami-14f2b946" },
      "ap-southeast-2": { "name":"Sydney",     "201303": "ami-363eaf0c", "201309": "ami-a148d59b" },
      "ap-northeast-1": { "name":"Tokyo",      "201303": "ami-173fbf16", "201309": "ami-3561fe34" },
      "sa-east-1":      { "name":"SaoPaulo",   "201303": "ami-dd6bb0c0", "201309": "ami-9f6ec982" }
    },
    "AZ" : {
      "us-east-1" :      { "primary" : "us-east-1d",      "secondary" : "us-east-1a" },
      "us-west-2" :      { "primary" : "us-west-2a",      "secondary" : "us-west-2b" },
      "us-west-1" :      { "primary" : "us-west-1a",      "secondary" : "us-west-1b" },
      "eu-west-1" :      { "primary" : "eu-west-1a",      "secondary" : "eu-west-1b" },
      "ap-southeast-1" : { "primary" : "ap-southeast-1a", "secondary" : "ap-southeast-1b" },
      "ap-southeast-2" : { "primary" : "ap-southeast-2a", "secondary" : "ap-southeast-2b" },
      "ap-northeast-1" : { "primary" : "ap-northeast-1a", "secondary" : "ap-northeast-1c" },
      "sa-east-1" :      { "primary" : "sa-east-1a",      "secondary" : "sa-east-1b" }
    },
    "StackConfig" : {
      "VPC"           : { "CIDR" : "10.0.0.0/16" },
      "PublicSubnet1" : { "CIDR" : "10.0.0.0/24" },
      "PublicSubnet2" : { "CIDR" : "10.0.1.0/24" },
      "TargetInstance": { "InstanceType" : "t1.micro" }
    }
  },
  "Resources" : {
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Fn::FindInMap" : [ "StackConfig", "VPC", "CIDR" ]},
        "InstanceTenancy" : "default",
        "Tags" : [
          {"Key" : "Application", "Value" : {"Ref" : "AWS::StackId"} },
          {"Key" : "Network", "Value" : "Public" }
        ]
      }
    },
    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
          {"Key" : "Network", "Value" : "Public" }
        ]
      }
    },
    "AttachGateway" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "InternetGatewayId" : { "Ref" : "InternetGateway" }
      }
    },
    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
          {"Key" : "Network", "Value" : "Public" }
        ]
      }
    },
    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn" : "AttachGateway",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "AvailabilityZone": { "Fn::FindInMap": [ "AZ", { "Ref": "AWS::Region" }, "primary" ]},
        "CidrBlock": { "Fn::FindInMap" : [ "StackConfig", "PublicSubnet1", "CIDR" ]}
      }
    },
    "PublicSubnet1RouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet1" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn" : "AttachGateway",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "AvailabilityZone": { "Fn::FindInMap": [ "AZ", { "Ref": "AWS::Region" }, "secondary" ]},
        "CidrBlock": { "Fn::FindInMap" : [ "StackConfig", "PublicSubnet2", "CIDR" ]}
      }
    },
    "PublicSubnet2RouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet2" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "VPCDefaultSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "GroupDescription" : "Allow all communications in VPC",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "0", "ToPort" : "65535", "CidrIp" : { "Fn::FindInMap" : [ "StackConfig", "VPC", "CIDR" ]} },
          { "IpProtocol" : "udp", "FromPort" : "0", "ToPort" : "65535", "CidrIp" : { "Fn::FindInMap" : [ "StackConfig", "VPC", "CIDR" ]} },
          { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "CidrIp" : { "Fn::FindInMap" : [ "StackConfig", "VPC", "CIDR" ]} }
        ]
      }
    },
    "SSHSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "GroupDescription" : "Enable SSH access via port 22",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "22",  "ToPort" : "22",  "CidrIp" : "0.0.0.0/0" }
        ]
      }
    },
    "LoadBalancerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "GroupDescription" : "Enable HTTP access via port 80",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80",  "CidrIp" : "0.0.0.0/0" }
        ]
      }
    },

    "TargetLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "Listeners" : [ { "LoadBalancerPort" : "80", "InstancePort" : "80", "Protocol" : "HTTP" } ],
        "HealthCheck" : {
          "Target" : "HTTP:80/index.html",
          "HealthyThreshold" : "2",
          "UnhealthyThreshold" : "5",
          "Interval" : "15",
          "Timeout" : "14"
        },
        "SecurityGroups" : [
          {"Ref" : "LoadBalancerSecurityGroup"}
        ],
        "Subnets" : [
          {"Ref" : "PublicSubnet1"},
          {"Ref" : "PublicSubnet2"}
        ]
      }
    },
    "TargetFleet" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : [
          { "Fn::FindInMap": [ "AZ", { "Ref": "AWS::Region" }, "primary" ]},
          { "Fn::FindInMap": [ "AZ", { "Ref": "AWS::Region" }, "secondary" ]}
        ],
        "VPCZoneIdentifier" : [
          { "Ref" : "PublicSubnet1" },
          { "Ref" : "PublicSubnet2" }
        ],
        "LaunchConfigurationName" : { "Ref" : "TargetInstanceLaunchConfig"  },
        "MinSize" : { "Ref" : "TargetCapacity" },
        "MaxSize" : { "Ref" : "TargetCapacity" },
        "DesiredCapacity" : { "Ref" : "TargetCapacity" },
        "LoadBalancerNames" : [ { "Ref" : "TargetLoadBalancer" } ],
        "Tags" : [
          { "Key" : "Name", "Value" : "JMeterTarget", "PropagateAtLaunch" : "true" },
          { "Key" : "Network", "Value" : "Public", "PropagateAtLaunch" : "true" }
        ]
      }
    },
    "TargetInstanceLaunchConfig"  : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "InstanceType": { "Fn::FindInMap" : [ "StackConfig", "TargetInstance", "InstanceType" ]},
        "KeyName": { "Ref" : "KeyName" },
        "ImageId": { "Fn::FindInMap": [ "AWSAmazonLinuxAMI", { "Ref": "AWS::Region" }, "201309" ]},
        "SecurityGroups": [
          { "Ref" : "SSHSecurityGroup" },
          { "Ref" : "VPCDefaultSecurityGroup" }
        ],
        "InstanceMonitoring" : "false",
        "AssociatePublicIpAddress" : "true",
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#! /bin/bash -v\n",
          "yum update -y\n",

          "# Helper function\n",
          "function error_exit\n",
          "{\n",
          "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '", { "Ref" : "TargetWaitHandle" }, "'\n",
          "  exit 1\n",
          "}\n",

          "# Install packages\n",
          "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackId" }, " -r TargetInstanceLaunchConfig ",
          "    --region ", { "Ref" : "AWS::Region" }, "\n",

          "# All is well so signal success\n",
          "/opt/aws/bin/cfn-signal -e $? -r \"TargetInstanceLaunchConfig setup complete\" '", { "Ref" : "TargetWaitHandle" }, "'\n"
        ]]}}
      },
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "yum" : {
                "httpd24"      : [],
                "php54"        : [],
                "php-pear"     : [],
                "jq"           : [],
                "python-magic" : []
              }
            },
            "files" : {
              "/var/www/html/index.html" : {
                "content" : "<html><head><title>Hello</title></head><body>Hello, target!</body></html>",
                "mode"   : "000644",
                "owner"  : "apache",
                "group"  : "apache"
              },
              "/var/www/html/info.php" : {
                "content" : "<?php phpinfo();",
                "mode"   : "000644",
                "owner"  : "apache",
                "group"  : "apache"
              },
              "/var/www/html/wait.php" : {
                "content" : "<?php usleep($_GET['time']); echo \"wait complete.\".$_GET['time'];",
                "mode"   : "000644",
                "owner"  : "apache",
                "group"  : "apache"
              }
            },
            "command" : {
              "01-create_hosts_entry-on_boot" : {
                "command" : "echo \"`curl -s curl http://169.254.169.254/latest/meta-data/local-ipv4` `hostname`\" >>/etc/hosts",
                "test" : "test ! -f .create_hosts_entry-semaphore"
              },
              "02-signal_startup_complete" : {
                "command" : "touch .create_hosts_entry-semaphore"
              }
            },
            "services" : {
              "sysvinit" : {
                "httpd"   : { "enabled" : "true", "ensureRunning" : "true" }
              }
            }
          }
        }
      }
    },
    "TargetWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },
    "TargetWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "TargetFleet",
      "Properties" : {
        "Handle" : {"Ref" : "TargetWaitHandle"},
        "Timeout" : "3600",
        "Count"   : { "Ref" : "TargetCapacity" }
      }
    },

    "Fullbok": {
      "Type" : "AWS::CloudFormation::Stack",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "TemplateURL" : "https://cm-public-cfn-templates.s3.amazonaws.com/fullbok/fullbok-1.8-SNAPSHOT.template",
         "Parameters" : {
           "KeyName": { "Ref": "KeyName" },
           "AvailabilityZone": { "Fn::FindInMap": [ "AZ", { "Ref": "AWS::Region" }, "primary" ]},
           "SSHFrom": "0.0.0.0/0",
           "MasterInstanceType": "m1.medium",
           "SlaveInstanceType": "m1.small",
           "MasterInstanceAMI": { "Ref": "MasterInstanceAMI" },
           "SlaveCapacity": { "Ref": "SlaveCapacity" },
           "SlaveSpotPrice": { "Ref": "SlaveSpotPrice" }
         }
      }
    }
  },
  "Outputs": {
    "Endpoint": {
      "Description": "URL of the target website",
      "Value":  { "Fn::Join": [ "", [ "http://", { "Fn::GetAtt": [ "TargetLoadBalancer", "DNSName" ]}]]}
    }
  }
}
